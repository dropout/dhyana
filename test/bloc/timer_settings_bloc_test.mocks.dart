// Mocks generated by Mockito 5.4.2 from annotations
// in dhyana/test/bloc/timer_settings_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dhyana/model/timer_settings.dart' as _i4;
import 'package:dhyana/service/crashlytics_service.dart' as _i2;
import 'package:dhyana/service/timer_settings_shared_prefs_service.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCrashlyticsService_0 extends _i1.SmartFake
    implements _i2.CrashlyticsService {
  _FakeCrashlyticsService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_1 extends _i1.SmartFake
    implements _i3.SharedPreferences {
  _FakeSharedPreferences_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimerSettings_2 extends _i1.SmartFake implements _i4.TimerSettings {
  _FakeTimerSettings_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimerSettingsSharedPrefsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimerSettingsSharedPrefsService extends _i1.Mock
    implements _i5.TimerSettingsSharedPrefsService {
  @override
  _i2.CrashlyticsService get crashlyticsService => (super.noSuchMethod(
        Invocation.getter(#crashlyticsService),
        returnValue: _FakeCrashlyticsService_0(
          this,
          Invocation.getter(#crashlyticsService),
        ),
        returnValueForMissingStub: _FakeCrashlyticsService_0(
          this,
          Invocation.getter(#crashlyticsService),
        ),
      ) as _i2.CrashlyticsService);
  @override
  _i6.Future<_i3.SharedPreferences> get sharedPrefs => (super.noSuchMethod(
        Invocation.getter(#sharedPrefs),
        returnValue:
            _i6.Future<_i3.SharedPreferences>.value(_FakeSharedPreferences_1(
          this,
          Invocation.getter(#sharedPrefs),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.SharedPreferences>.value(_FakeSharedPreferences_1(
          this,
          Invocation.getter(#sharedPrefs),
        )),
      ) as _i6.Future<_i3.SharedPreferences>);
  @override
  _i6.Future<_i4.TimerSettings> getTimerSettings() => (super.noSuchMethod(
        Invocation.method(
          #getTimerSettings,
          [],
        ),
        returnValue: _i6.Future<_i4.TimerSettings>.value(_FakeTimerSettings_2(
          this,
          Invocation.method(
            #getTimerSettings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.TimerSettings>.value(_FakeTimerSettings_2(
          this,
          Invocation.method(
            #getTimerSettings,
            [],
          ),
        )),
      ) as _i6.Future<_i4.TimerSettings>);
  @override
  _i6.Future<void> setTimerSettings(_i4.TimerSettings? timerSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTimerSettings,
          [timerSettings],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [CrashlyticsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCrashlyticsService extends _i1.Mock
    implements _i2.CrashlyticsService {
  @override
  void recordError({
    required dynamic exception,
    required StackTrace? stackTrace,
    required String? reason,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #recordError,
          [],
          {
            #exception: exception,
            #stackTrace: stackTrace,
            #reason: reason,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void log(String? message) => super.noSuchMethod(
        Invocation.method(
          #log,
          [message],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setUserId(String? userId) => super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValueForMissingStub: null,
      );
}
